/* copy/paste from UPENN-VIRT-FSF-FT-07-2022-U-LOLC\02-Advanced-CSS\01-Activities\28-Stu_Mini-Project\Main\assets\css\style.css 
    fixed spacing
    deleted unnecessary elements
*/

/* color scheme sourced from http://khroma.co/generator/ */
:root {
    --outer-space: #33393f;
    --bright-turquoise: #2aefcb;
    --gin: #e0eae4;
    --heliotrope: #e866ec;
}
  
  /* set content highlight color and background */
::selection {
    background-color: var(--bright-turquoise);
    color: var(--outer-space);
}
  
html {
    /* set 1rem to 10px instead of native 16px to make it easier to calculate font-size values for the rest of the page (e.g. 1.6rem is 16px, 2.0rem is 20px, etc.) */
    font-size: 62.5%;
}
  
body {
    /* Sans Serif font stack is implemented to help select the best font for each type of computer operating system */
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica,
      Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
  
    /* set body font size to 1.75rem, which is 1.75x more than the font-size of 10px, making it 17.5px  */
    font-size: 1.75rem;
    line-height: 1.5;
    color: var(--gin);
    background-color: var(--outer-space);
}
  
h1,
h2,
h3,
h4,
h5,
h6 {
    margin-bottom: 0.625rem;
    color: var(--heliotrope);
    font-weight: 700;
    line-height: 1.1;
}
  
h1 {
    font-size: 4rem;
    display: inline;
    float: left;
    color: black;
}
  
h2 {
    font-size: 3.5rem;
    text-align: center;
}

figcaption {
    font-size: 3.5rem;
    text-align: center;
    margin-bottom: 0.625rem;
    color: var(--heliotrope);
    font-weight: 700;
    line-height: 1.1;
    padding-top: 3%;
}
  
h3 {
    font-size: 3rem;
    display: inline-block;
}
  
h4 {
    font-size: 2.5rem;
}
  
h5 {
    font-size: 2rem;
}
  
h6 {
    font-size: 1.5rem;
}
  
p {
    margin-bottom: 1rem;
}
  
header {
    width: 96%;
    margin: 0 auto;
    padding: 2.5rem;
    display: inline-block;
}

header ul {
    list-style-type: none;
}

header ul li {
    display: inline-block;
    margin-left: 25px;
}

header ul li a {
    color: #ffffff;
    text-decoration: none;
}

.page-title {
    padding: 1rem 1.2rem;
    font-size: 4.5rem;
}

.hero {
    position: relative;
    height: 350px;
    width: 100%;
    margin-bottom: 25px;
    background-image: url("./assets/images/hero.png"); 
    /* image from https://www.artmajeur.com/en/movsisantigran/artworks/14097140/purple-sunset*/
    background-size: cover;
    background-position: center;
}

main {
    width: 96%;
    margin: 2rem auto;
}

#about-me {
    display: block;
    margin-left: auto;
    margin-right: auto;
    width: 50%;
}

figure a img {
    flex-wrap: wrap;
    display: inline-block;
    height: 20%;
    width:  20%;
    object-fit: cover;
}

#big {
    flex-wrap: wrap;
    display: inline-block;
    height: 400%;
    width:  400%;
    object-fit: cover;
}

figure a {
    display: inline-block;
}

img:hover {
    transform: scale(1.1);
}

section ul li a {
    display: inline;
    color: #ffffff;
}
/* create our main grid with flexbox, use negative margins to offset the padding on the .card-column class */
.row {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    margin-left: -1.5rem;
    margin-right: -1.5rem;
}

.justify-center {
    justify-content: center;
}
  
/* using a mobile-first approach, set base column width to be 100% and we'll update it using media queries for larger screen sizes */
.card-column {
    flex: 1 0 100%;
    padding: 1.5rem;
    /* when the screen resizes, make it so our columns don't jump in size */
    transition: flex-basis 500ms linear;
    margin-bottom: 1.5rem;
}

/* make each code card a flexbox column to align and justify content within it */
.code-card {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    min-height: 100%;
    padding: 2rem;
    color: var(--heliotrope);
    transition: all 0.5s ease-in-out;
}

.pinned {
    border-right: 2px dashed var(--gin);
}

/* using a mobile-first approach, use `min-width` values going from narrow -> wide for a responsive design */
@media screen and (min-width: 768px) {
    /* on tablets, set columns to only be 50% of the width and not grow */
    .card-column {
        flex: 0 0 50%;
        max-width: 50%;
    }
  
    /* select the last child to grow to full width if it has space to grow */
    .card-column:last-child {
        flex-grow: 1;
    }
}
  
/* media query for larger screens */
@media screen and (min-width: 992px) {
    header {
      width: 75%;
    }
  
    .card-column {
      flex: 0 0 49%;
      max-width: 49%;
    }
}